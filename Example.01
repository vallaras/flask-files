from flask import *
import sqlite3
app = Flask(__name__)
@app.route("/")
def index():
    return render_template("index.html");
@app.route("/add")
def add():
    return render_template("add.html");
@app.route("/sub")
def sub():
    return render_template("sub.html");
@app.route("/multiply")
def multi():
    return render_template("multiply.html");
@app.route("/division")
def div():
    return render_template("division.html");

@app.route("/savedetailsadd", methods=["POST", "GET"])
def add1():
    msg = "msg"
    if request.method == "POST":
        try:
            a = request.form["num1"]
            b = request.form["num2"]
            sum=int(a)+int(b)
            with sqlite3.connect("employee1.db") as con:
                cur = con.cursor()
                cur.execute("INSERT into addtable (num1,num2,sum) values (?,?,?)", (a, b, sum))
                con.commit()
                msg = "sum value="+str(sum)
        except:
            con.rollback()
            msg = "We can not add the employee to the list"
        finally:
            return render_template("success.html", msg=msg)
            con.close()

@app.route("/savedetailssub", methods=["POST", "GET"])
def sub1():
    msg = "msg"
    if request.method == "POST":
        try:
            a = request.form["num1"]
            b = request.form["num2"]
            sum=int(a)-int(b)
            with sqlite3.connect("employee1.db") as con:
                cur = con.cursor()
                cur.execute("INSERT into sub (num1,num2,sum) values (?,?,?)", (a, b, sum))
                con.commit()
                msg = "sum value="+str(sum)
        except:
            con.rollback()
            msg = "We can not add the employee to the list"
        finally:
            return render_template("success.html", msg=msg)
            con.close()


@app.route("/savedetailsmultiply", methods=["POST", "GET"])
def mul1():
    msg = "msg"
    if request.method == "POST":
        try:
            a = request.form["num1"]
            b = request.form["num2"]
            sum=int(a)*int(b)
            with sqlite3.connect("employee1.db") as con:
                cur = con.cursor()
                cur.execute("INSERT into multiply(num1,num2,sum) values (?,?,?)", (a, b, sum))
                con.commit()
                msg = "sum value="+str(sum)
        except:
            con.rollback()
            msg = "We can not add the employee to the list"
        finally:
            return render_template("success.html", msg=msg)
            con.close()

@app.route("/savedetailsdivision", methods=["POST", "GET"])
def division1():
    msg = "msg"
    if request.method == "POST":
        try:
            a = request.form["num1"]
            b = request.form["num2"]
            sum=int(a)/int(b)
            with sqlite3.connect("employee1.db") as con:
                cur = con.cursor()
                cur.execute("INSERT into division (num1,num2,sum) values (?,?,?)", (a, b, sum))
                con.commit()
                msg = "sum value="+str(sum)
        except:
            con.rollback()
            msg = "We can not add the employee to the list"
        finally:
            return render_template("success.html", msg=msg)
            con.close()

@app.route("/addview")
def view():
    con = sqlite3.connect("employee1.db")
    con.row_factory = sqlite3.Row
    cur = con.cursor()
    cur.execute("select * from addtable")
    rows = cur.fetchall()
    return render_template("view.html", rows=rows)

@app.route("/subview")
def view2():
    con = sqlite3.connect("employee1.db")
    con.row_factory = sqlite3.Row
    cur = con.cursor()
    cur.execute("select * from sub")
    rows = cur.fetchall()
    return render_template("view.html", rows=rows)

@app.route("/multiplyview")
def view3():
    con = sqlite3.connect("employee1.db")
    con.row_factory = sqlite3.Row
    cur = con.cursor()
    cur.execute("select * from multiply")
    rows = cur.fetchall()
    return render_template("view.html", rows=rows)

@app.route("/divisionview")
def view4():
    con = sqlite3.connect("employee1.db")
    con.row_factory = sqlite3.Row
    cur = con.cursor()
    cur.execute("select * from division")
    rows = cur.fetchall()
    return render_template("view.html", rows=rows)





if __name__ == "__main__":
    app.run(debug=True,port=9977)
